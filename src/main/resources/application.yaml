spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ecommerce
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

server:
  port: 8081

  data:
    web:
      pageable:
        default-page-size: 5
        max-page-size: 5

security:
  oauth2:
    resourceserver:
      jwt:
        issuer-uri: http://localhost:8080/realms/ecommerce
        jwk-set-uri: http://localhost:8080/realms/ecommerce/protocol/openid-connect/certs

keycloak:
  token-uri: http://localhost:8080/realms/ecommerce/protocol/openid-connect/token
  client-id: ecommerce-backend
  client-secret: ${KEYCLOAK_CLIENT_SECRET}


paypal:
  client-id: ${CLIENT_ID}
  secret: ${SECRET}
  mode: sandbox

kafka:
  bootstrap-servers: localhost:9092
  consumer:
    group-id: ecommerce-group
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer

shippo:
  api:
    key: ${SHIPPO_API_KEY}